version: "3.7"

volumes:
    elk_elasticsearch_data:

services:
  web:
    container_name: minitwit-web
    image: apal/minitwit
    restart: always
    environment:
      - WAIT_HOSTS=db:3306
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
      - BUGSNAG_API_KEY=$BUGSNAG_API_KEY
      - BUGSNAG_APP_TYPE=web
      - DB_PASS=$DB_PASS
    ports:
        - "80:80"
    depends_on:
      - grafana
      - prometheus
      - db
    links:
      - db
  api:
    container_name: minitwit-api
    image: apal/minitwitclient
    restart: always
    environment:
      - WAIT_HOSTS=db:3306
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
      - BUGSNAG_API_KEY=$BUGSNAG_API_KEY
      - BUGSNAG_APP_TYPE=api
      - DB_PASS=$DB_PASS
    ports:
        - "8080:8080"
    depends_on:
      - db
    links:
      - db
  
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'minitwit'
      MYSQL_USER: 'minitwit'
      MYSQL_PASSWORD: $DB_PASS
      MYSQL_ROOT_PASSWORD: $DB_PASS
    ports:
      - '3306:3306'
    volumes:
      - /mnt/go_minitwit/mysql_data:/var/lib/mysql:rw
    depends_on:
      - grafana
      - prometheus

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:4.5.2
    ports:
      - "3000:3000"  

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.1"
    environment:
        - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
        - "discovery.type=single-node"
        - "ELK_USER=$ELK_USER"
        - "ELK_PASSWORD=$ELK_PASSWORD"
        - "xpack.security.enabled=true"
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health"]
      interval: 3s
      timeout: 3s
      retries: 10
    volumes:
        - elk_elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    image: "docker.elastic.co/kibana/kibana:7.17.1"
    depends_on:
      - elasticsearch
    environment:
        elasticsearch.hosts: '["http://elasticsearch:9200"]'
        #ELK_USERNAME: '$ELK_USER'
        #ELK_PASSWORD: '$ELK_PASSWORD'

  filebeat:
    image: "docker.elastic.co/beats/filebeat:7.17.1"
    environment:
        - "ELK_USER=$ELK_USER"
        - 'ELK_PASSWORD=$ELK_PASSWORD'
    user: root
    volumes:
        - ${ELK_DIR}/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
        - /var/lib/docker:/var/lib/docker:ro
        - /var/run/docker.sock:/var/run/docker.sock
          
  nginx: 
    image: nginx
    ports:
      - 9200:9200
      - 5601:5601
      - 8881:8881
      - 8882:8882
    volumes:
      - type: bind
        source: ${ELK_DIR}/nginx.conf
        target: /etc/nginx/nginx.conf
      - type: bind
        source: ${ELK_DIR}/.htpasswd
        target: /etc/nginx/.htpasswd
