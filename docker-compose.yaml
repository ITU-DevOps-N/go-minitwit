version: "3.7"

volumes:
    elk_elasticsearch_data:

services:
  web:
    container_name: minitwit-web
    image: itudevops/go-minitwit:27
    restart: always
    environment:
      - WAIT_HOSTS=db:3306
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
      - BUGSNAG_API_KEY=$BUGSNAG_API_KEY
      - BUGSNAG_APP_TYPE=web
      - DB_PASS=$DB_PASS
    ports:
        - "80:80"
    depends_on:
      - grafana
      - prometheus
      - db
    links:
      - db
  api:
    container_name: minitwit-api
    image: itudevops/go-minitwit-api:27
    restart: always
    environment:
      - WAIT_HOSTS=db:3306
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
      - BUGSNAG_API_KEY=$BUGSNAG_API_KEY
      - BUGSNAG_APP_TYPE=api
      - DB_PASS=$DB_PASS
    ports:
        - "8080:8080"
    depends_on:
      - db
    links:
      - db
  
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'minitwit'
      MYSQL_USER: 'minitwit'
      MYSQL_PASSWORD: $DB_PASS
      MYSQL_ROOT_PASSWORD: $DB_PASS
    ports:
      - '3306:3306'
    volumes:
      - /mnt/go_minitwit/mysql_data:/var/lib/mysql:rw
    depends_on:
      - grafana
      - prometheus

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:4.5.2
    ports:
      - "3000:3000"  

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "discovery.type=single-node"
    volumes:
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health"]
      interval: 3s
      timeout: 3s
      retries: 10
    ports:
      - 9200:9200

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.1
    volumes:
      - ./config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
      - elasticsearch
  
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.1
    depends_on:
     - elasticsearch
    volumes:
      - ./config/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./logs/:/logs/ 
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock 

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.1
    environment:
        elasticsearch.hosts: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/api/status"]
      interval: 3s
      timeout: 3s
      retries: 50
    ports:
      - 5601:5601