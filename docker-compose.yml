version: "3.7"

networks:
  monitoring-logging:
  elk:

volumes:
  grafana-data:
  elk_elasticsearch_data:

services:
  web:
    build:
      context: .
      target: web
    env_file:
      - .minitwit-secrets.env
    networks:
      - monitoring-logging
    # ports:
    #   - 8080:8080

  api:
    build:
      context: .
      target: api
    env_file:
      - .minitwit-secrets.env
    networks:
      - monitoring-logging
    # ports:
    #   - 8081:8081

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - monitoring-logging
    # ports:
    # - 9090:9090

  grafana:
    image: grafana/grafana:4.5.2
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring-logging
    # ports:
    #   - 3000:3000

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.2.0
    user: root
    command: filebeat -e -strict.perms=false
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - elasticsearch
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0
    environment:
      elasticsearch.hosts: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch
    networks:
      - elk
    # ports:
    #   - 5601:5601

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    volumes: 
      - elk_elasticsearch_data:/usr/share/elasticsearch/data
    environment:
        - cluster.name=docker-logs-elk-cluster
        - xpack.security.enabled=false
        - bootstrap.memory_lock=true
        - ES_JAVA_OPTS=-Xms1g -Xmx1g
        - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - elk
    # ports:
    #   - 9200:9200
  
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.6
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock