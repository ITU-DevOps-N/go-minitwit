name: Docker Image CI

on:
  push:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout 
        uses: actions/checkout@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and push App
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:webbuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:webbuildcache,mode=max
      -
        name: Build and push API
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.api
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:api
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:apibuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:apibuildcache,mode=max
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      env:
        PSW: "${{ secrets.DOCKER_PASSWORD }}"
        USR: "${{ secrets.DOCKER_USERNAME }}"
        VER: "${{ github.event.inputs.version }}"
      with:
        host: ${{ secrets.MT_SERVER }}
        username: ${{ secrets.MT_USER }}
        key: ${{ secrets.MT_KEY }}
        envs: PSW,USR,VER
        script: |
          source /root/.profile
          echo $VER > /root/deploy-version
          echo $PSW | docker login -u $USR --password-stdin
          cd /root/go-minitwit
          git pull --all
          docker-compose pull
          docker-compose up -d