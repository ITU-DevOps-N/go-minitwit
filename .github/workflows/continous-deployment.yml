---
name: Continuous Deployment

on:
  push:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and push App
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          target: web
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/go-minitwit:${{github.run_number}}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/go-minitwit:webbuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/go-minitwit:webbuildcache,mode=max
      -
        name: Build and push API
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          target: api
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/go-minitwit-api:${{github.run_number}}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/go-minitwit-api:apibuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/go-minitwit-api:apibuildcache,mode=max
      -
        name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        env:
          PSW: "${{ secrets.DOCKER_PASSWORD }}"
          USR: "${{ secrets.DOCKER_USERNAME }}"
        with:
          host: ${{ secrets.MT_SERVER }}
          username: ${{ secrets.MT_USER }}
          key: ${{ secrets.MT_KEY }}
          envs: PSW,USR
          script: |
            source /root/.profile
            echo ${{github.run_number}} > /root/deploy-version
            cd /root/go-minitwit
            git stash
            git pull --all
            sed -ir "s/TAG/${{github.run_number}}/" docker-compose.prod.yml
            docker pull itudevops/go-minitwit:${{github.run_number}}
            docker pull itudevops/go-minitwit-api:${{github.run_number}}
            docker stack deploy --compose-file docker-compose.prod.yml minitwit
      -
        name: wait for new release version
          run: ./wait_for_release.sh http://www.go-minitwit.duckdns.org/version ${{github.run_number}}
          shell: bash
