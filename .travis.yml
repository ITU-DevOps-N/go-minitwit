os: linux
dist: focal

language: python
python:
  - "3.7"

branches:
  only:
    - cicd

services:
  - docker  # required, but travis uses older version of docker :(

before_install:
  # Decrypt the git_deploy_key.enc key into /tmp/git_deploy_key
  - openssl aes-256-cbc -K $encrypted_c1ae6509c8a8_key -iv $encrypted_c1ae6509c8a8_iv -in digitalocean.enc  -out /tmp/git_deploy_key -d
  # Make sure only the current user can read the private key
  - chmod 600 /tmp/git_deploy_key
  # Create a script to return the passphrase environment variable to ssh-add
  - echo 'echo ${SSH_PASSPHRASE}' > /tmp/askpass && chmod +x /tmp/askpass
  # Start the authentication agent
  - eval "$(ssh-agent -s)"
  # Add the key to the authentication agent
  - DISPLAY=":0.0" SSH_ASKPASS="/tmp/askpass" setsid ssh-add /tmp/git_deploy_key </dev/null

install:
  - docker --version  # document the version travis is using

stages:
  - docker_build
  # - test
  - deploy

jobs:
  include:
    - stage: docker_build
      name: "build and push docker"
      script:
        - echo "LOGIN"
        - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        - echo "BUILD"
        - docker build -t $DOCKER_USERNAME/$DOCKER_REPO:latest . -f Dockerfile
        - docker build -t $DOCKER_USERNAME/$DOCKER_REPO:api . -f Dockerfile.api
        - echo "PUSH"
        - docker push $DOCKER_USERNAME/$DOCKER_REPO:latest
        - docker push $DOCKER_USERNAME/$DOCKER_REPO:api


    - stage: test
      name: "run pytest"
      install: skip
      script:
        - docker build -t $DOCKER_USERNAME/DOCKER_REPO:test -f Dockerfile-minitwit-tests .
        - yes | docker-compose up -d
        - docker run -it --rm --network=itu-minitwit-network $DOCKER_USERNAME/DOCKER_REPO:test

    - stage: deploy
      name: "deploy new version"
      install: skip
      # -o flag to get around "add ip to known hosts prompt"
      # script: |
      #   ssh -o "StrictHostKeyChecking no" ${MT_USER}@${MT_SERVER} \
      #   "source /root/.bash_profile && \
      #   cd /go-minitwit && \
      #   docker-compose pull && \
      #   docker-compose up -d 
      script: 
        - echo "DEPLOY"
        - cd /go-minitwit
        - docker-compose pull
        - docker-compose up -d